// Datasource: PostgreSQL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator: Prisma Client
generator client {
  provider = "prisma-client-js"
}

// =============================
// MODELS
// =============================

// 1Ô∏è‚É£ User Model
model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  blogs    Blog[]
  projects Project[]
  resumes  Resume[]
}

// Enum for roles
enum Role {
  USER
  ADMIN
}

// 2Ô∏è‚É£ Blog Model
model Blog {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  description String? 
  tags        String[]
  image       String?
  content     String
  seoTitle    String?
  seoDesc     String?
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  views       Int      @default(0)   // üëà track blog views

  // Relations
  author User @relation(fields: [authorId], references: [id])
}


// 3Ô∏è‚É£ Project Model
model Project {
  id          String   @id @default(uuid())
  title       String
  slug        String   @unique
  description String
  features    String[]
  thumbnail   String?
  liveLink    String?
  repoLink    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  userId String
  user   User   @relation(fields: [userId], references: [id])
}

// 4Ô∏è‚É£ About Me Model (single entry, editable by admin)
model About {
  id        String   @id @default(uuid())
  name      String
  bio       String
  email     String
  contact   String?
  skills    String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  image     String?
}

// 5Ô∏è‚É£ Resume Model
model Resume {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  name        String
  designation String
  contact     String

  workExp     Json     // Array of { company, role, duration, description }
  education   Json     // Array of { degree, institution, year }
  skills      String[] // List of skills
  projects    Json     
  hobbies     String?
  interests   String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

